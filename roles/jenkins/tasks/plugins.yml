---
- name          : Ensure jenkins running before requesting safe restart
  service       : name=jenkins state=started

- name          : Jenkins起動待ち
  pause         : seconds=5

- name          : CLIでjenkinsにログインする
  # OK to ignore errors as it won't work before Jenkins is installed
  ignore_errors : yes
  command       : >
    {{ jenkins_cli_cmd }} login --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }}
  when          : jenkins_admin_user is defined and jenkins_admin_password is defined

- name          : プラグインのリストを取得
  shell         : "{{ jenkins_cli_cmd }} list-plugins | cut -f 1 -d ' '"
  when          : plugins is defined
  register      : plugins_installed
  
- name          : プラグインをインストール/アップデートする
  shell         : "{{ jenkins_cli_cmd }} install-plugin {{ item }}"
  when          : plugins_installed.changed and plugins_installed.stdout.find('{{ item }}') == -1
  with_items    : plugins
  ignore_errors : yes

- name          : アップデートするプラグインを取得
  shell         : "{{ jenkins_cli_cmd }} -noKeyAuth list-plugins | grep ')$' | cut -f 1 -d ' ' | awk 1 ORS=' '"
  register      : plugins_updates
  when          : (ansible_os_family == "Debian" or ansible_os_family == "RedHat")

- name          : プラグインをアップデート
  shell         : "{{ jenkins_cli_cmd }} install-plugin {{ item }}"
  with_items    : plugins_updates.stdout.split()
  when          : plugins_updates.stdout != ''
  ignore_errors : yes

- name          : Jenkinsをリスタート
  service       :
    name        : jenkins
    state       : restarted
    enabled     : yes
  when          : plugins_installed.changed or plugins_updates.changed

# ***** デフォルトプラグイン

# cloudbees-folder 
# credentials-binding 
# antisamy-markup-formatter 
# build-timeout
# timestamper
# ws-cleanup
# ant
# gradle
# workflow-aggregator 
# github-organization-folder 
# pipeline-stage-view 
# git
# subversion
# ssh-slaves
# matrix-auth
# pam-auth
# ldap
# email-ext
# mailer

# ***** 追加プラグイン
# junit
# warnings
# xunit
# windows-slave

# cppcheck
# doxygen
# growl
# msbuild
# matrix-project
# parameterized-trigger 

# role-strategy 
